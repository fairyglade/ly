const Lang = @This();

ly: struct {
    capslock: []const u8,
    err_alloc: []const u8,
    err_bounds: []const u8,
    err_chdir: []const u8,
    err_console_dev: []const u8,
    err_dgn_oob: []const u8,
    err_domain: []const u8,
    err_hostname: []const u8,
    err_mlock: []const u8,
    err_null: []const u8,
    err_pam: []const u8,
    err_pam_abort: []const u8,
    err_pam_acct_expired: []const u8,
    err_pam_auth: []const u8,
    err_pam_authinfo_unavail: []const u8,
    err_pam_authok_reqd: []const u8,
    err_pam_buf: []const u8,
    err_pam_cred_err: []const u8,
    err_pam_cred_expired: []const u8,
    err_pam_cred_insufficient: []const u8,
    err_pam_cred_unavail: []const u8,
    err_pam_maxtries: []const u8,
    err_pam_perm_denied: []const u8,
    err_pam_session: []const u8,
    err_pam_sys: []const u8,
    err_pam_user_unknown: []const u8,
    err_path: []const u8,
    err_perm_dir: []const u8,
    err_perm_group: []const u8,
    err_perm_user: []const u8,
    err_pwnam: []const u8,
    err_user_gid: []const u8,
    err_user_init: []const u8,
    err_user_uid: []const u8,
    err_xsessions_dir: []const u8,
    err_xsessions_open: []const u8,
    login: []const u8,
    logout: []const u8,
    numlock: []const u8,
    password: []const u8,
    restart: []const u8,
    shell: []const u8,
    shutdown: []const u8,
    wayland: []const u8,
    xinitrc: []const u8,
},

pub fn init() Lang {
    return .{ .ly = .{
        .capslock = "capslock",
        .err_alloc = "failed memory allocation",
        .err_bounds = "out-of-bounds index",
        .err_chdir = "failed to open home folder",
        .err_console_dev = "failed to access console",
        .err_dgn_oob = "log message",
        .err_domain = "invalid domain",
        .err_hostname = "failed to get hostname",
        .err_mlock = "failed to lock password memory",
        .err_null = "null pointer",
        .err_pam = "pam transaction failed",
        .err_pam_abort = "pam transaction aborted",
        .err_pam_acct_expired = "account expired",
        .err_pam_auth = "authentication error",
        .err_pam_authinfo_unavail = "failed to get user info",
        .err_pam_authok_reqd = "token expired",
        .err_pam_buf = "memory buffer error",
        .err_pam_cred_err = "failed to set credentials",
        .err_pam_cred_expired = "credentials expired",
        .err_pam_cred_insufficient = "insufficient credentials",
        .err_pam_cred_unavail = "failed to get credentials",
        .err_pam_maxtries = "reached maximum tries limit",
        .err_pam_perm_denied = "permission denied",
        .err_pam_session = "session error",
        .err_pam_sys = "system error",
        .err_pam_user_unknown = "unknown user",
        .err_path = "failed to set path",
        .err_perm_dir = "failed to change current directory",
        .err_perm_group = "failed to downgrade group permissions",
        .err_perm_user = "failed to downgrade user permissions",
        .err_pwnam = "failed to get user info",
        .err_user_gid = "failed to set user GID",
        .err_user_init = "failed to initialize user",
        .err_user_uid = "failed to set user UID",
        .err_xsessions_dir = "failed to find sessions folder",
        .err_xsessions_open = "failed to open sessions folder",
        .login = "login:",
        .logout = "logged out",
        .numlock = "numlock",
        .password = "password:",
        .restart = "reboot",
        .shell = "shell",
        .shutdown = "shutdown",
        .wayland = "wayland",
        .xinitrc = "xinitrc",
    } };
}
